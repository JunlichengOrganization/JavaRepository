<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.junlc.admin.sys.mapper.UserMapper">

    <select id="selectCustomerUsers" resultType="com.junlc.admin.sys.domain.User">
        select address,loginname from sys_user
    </select>

    <select id="loadUserDepts" resultType="com.junlc.admin.sys.vo.UserVo">
       SELECT s.*,t.title as deptname  FROM sys_dept t inner join sys_user s
on t.id = s.deptid  ${ew.customSqlSegment}
    </select>


    <select id="loadCustomerUserDepts" parameterType="java.util.Map" resultType="com.junlc.admin.sys.vo.UserVo">
        SELECT s.*,t.title as deptname  FROM sys_dept t inner join sys_user s
        on t.id = s.deptid
         where 1=1
        <!--<if test="loginname != null and loginname.trim() !='' ">-->
            <!--and loginname = #{loginname, jdbcType=VARCHAR}-->
        <!--</if>-->
        <if test="loginname != null and loginname !='' ">
            and loginname like CONCAT('%',#{loginname, jdbcType=VARCHAR},'%')
        </if>
        <!--<if test="name != null and name !='' ">-->
            <!--or name like CONCAT('%',#{name, jdbcType=VARCHAR},'%')-->
        <!--</if>-->
        ORDER BY s.id ASC
        <if test="offset != null and limit != null">
            limit #{limit} offset #{offset}
        </if>
    </select>


    <!--<insert id="addJob" parameterType="com.springboot.dao.entity.Job" keyProperty="id" keyColumn="id" useGeneratedKeys="true"> useGeneratedKeys="true" ！！-->
    <!--.getId()//获取插入主表后自增的值  记得在Service层加上@Transactional-->
    <!--例如-->
    <!--@Service-->
    <!--public class RoleService {-->
    <!--@Autowired-->
    <!--private RoleMapper roleMapper;-->
    <!--@Autowired-->
    <!--private JobMapper jobMapper;-->
    <!--@Transactional-->
    <!--public int addRoleJob(Role role) {-->
    <!--roleMapper.addRoleJob(role);-->
    <!--Job job = new Job();-->
    <!--job.setRoleId(role.getId());-->
    <!--job.setJob(role.getJob());-->
    <!--int i = jobMapper.addJob(job);-->
    <!--return i;-->
    <!--}-->
    <!--}-->


    <!-- 不需要rownum-->
    <!--select * from (  SELECT s.*,t.title as deptname  FROM sys_dept t inner join sys_user s-->
    <!--on t.id = s.deptid-->
    <!--where loginname  like '%l%'-->
    <!--order by s.id ) temp-->
    <!--LIMIT 2 OFFSET 1-->
    <!--或-->
    <!--SELECT s.*,t.title as deptname  FROM sys_dept t inner join sys_user s-->
    <!--on t.id = s.deptid-->
    <!--where loginname  like '%l%'-->
    <!--order by s.id-->
    <!--LIMIT 2 OFFSET 1-->
    <!--都正确-->
</mapper>
